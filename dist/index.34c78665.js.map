{"mappings":"AAAA,EAA2B,AAA3B,uBAA2B,AAA3B,EAA2B,CAC3B,KAAK,CAAC,OAAO,GAAG,CAAC;IACf,CAAI,KAAE,CAAM;IACZ,CAAU,WAAE,CAAQ;IACpB,CAAO,QAAE,CAAK;IACd,CAAW,YAAE,CAAS;AACxB,CAAC;AACD,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAO;AAChD,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAY,aAAE,CAAE,GAAG,CAA8B,AAA9B,EAA8B,AAA9B,4BAA8B;AAC7F,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAO;AAEnD,EAEG,AAFH,+CAEG,AAFH,EAEG,UACM,YAAY,GAAG,CAAC;IACvB,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,MAAM,CACvB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAM;AAE/B,CAAC;AAED,EAEG,AAFH,sDAEG,AAFH,EAEG,UACM,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAAA,CAAC,EAAE,IAAI,EAAE,SAAS,GAAG,IAAI;IACnD,QAAQ,CAAC,IAAI;AACf,CAAC;SAEQ,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,YAAY,GAAI,CAAiB,AAAjB,EAAiB,AAAjB,eAAiB;IACjC,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,GAAG,CAAO,OAAE,CAA0B,AAA1B,EAA0B,AAA1B,wBAA0B;IAC/F,YAAY,CAAC,IAAI;AACnB,CAAC;AAED,EAEG,AAFH,4CAEG,AAFH,EAEG,UACM,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,SAAS,CAC1B,EAAE,EAAE,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,CAAM,QACnC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAQ;SAE3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAQ;AAGpC,CAAC;AAED,EAEG,AAFH,8EAEG,AAFH,EAEG,UACM,mBAAmB,GAAG,CAAC;IAC9B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAW;IACtD,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,QAAQ,CACzB,IAAI,CAAC,gBAAgB,CAAC,CAAO,QAAE,QAAQ,CAAE,KAAK,EAAE,CAAC;QAC/C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAM;QACrC,UAAU,CAAC,IAAI;QACf,KAAK,CAAC,cAAc;IACtB,CAAC;AAEL,CAAC;AAED,EAEG,AAFH,gGAEG,AAFH,EAEG,UACM,UAAU,GAAG,CAAC;IACrB,mBAAmB;IACnB,MAAM,CAAC,gBAAgB,CAAC,CAAU,eAAQ,QAAQ,CAAC,QAAQ,CAAC,IAAI;MAAI,CAAmD,AAAnD,EAAmD,AAAnD,iDAAmD;IAEvH,GAAG,CAAC,IAAI,GAAG,CAAI,IAAE,CAAe,AAAf,EAAe,AAAf,aAAe;IAChC,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,GACvB,IAAI,GAAG,QAAQ,CAAC,IAAI;IAEtB,UAAU,CAAC,IAAI;AACjB,CAAC;AAED,UAAU","sources":["js/router.js"],"sourcesContent":["/* All routes of the SPA */\r\nconst _routes = {\r\n  \"#/\": \"home\",\r\n  \"#/create\": \"create\",\r\n  \"#/fav\": \"fav\",\r\n  \"#/profile\": \"profile\",\r\n};\r\nconst _pages = document.querySelectorAll(\".page\");\r\nconst _basePath = location.pathname.replace(\"index.html\", \"\"); // remove index.html from path\r\nconst _navLinks = document.querySelectorAll(\"nav a\");\r\n\r\n/**\r\n * Changing display to none for all pages\r\n */\r\nfunction hideAllPages() {\r\n  for (const page of _pages) {\r\n    page.style.display = \"none\";\r\n  }\r\n}\r\n\r\n/**\r\n * Navigating SPA to specific page by given path\r\n */\r\nfunction navigateTo(path) {\r\n  window.history.pushState({}, path, _basePath + path);\r\n  showPage(path);\r\n}\r\n\r\nfunction showPage(path) {\r\n  hideAllPages(); // hide all pages\r\n  document.querySelector(`#${_routes[path]}`).style.display = \"block\"; // show page by given path\r\n  setActiveTab(path);\r\n}\r\n\r\n/**\r\n * sets active menu item by given path\r\n */\r\nfunction setActiveTab(path) {\r\n  for (const link of _navLinks) {\r\n    if (path === link.getAttribute(\"href\")) {\r\n      link.classList.add(\"active\");\r\n    } else {\r\n      link.classList.remove(\"active\");\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Attaching event to nav links and preventing default anchor link event\r\n */\r\nfunction attachNavLinkEvents() {\r\n  const navLinks = document.querySelectorAll(\".nav-link\");\r\n  for (const link of navLinks) {\r\n    link.addEventListener(\"click\", function (event) {\r\n      const path = link.getAttribute(\"href\");\r\n      navigateTo(path);\r\n      event.preventDefault();\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Initialising the router, calling attachNavLinkEvents(), popstate event and navigateTo()\r\n */\r\nfunction initRouter() {\r\n  attachNavLinkEvents();\r\n  window.addEventListener(\"popstate\", () => showPage(location.hash)); // change page when using back and forth in browser\r\n\r\n  let path = \"#/\"; // default path\r\n  if (_routes[location.hash]) {\r\n    path = location.hash;\r\n  }\r\n  navigateTo(path);\r\n}\r\n\r\ninitRouter();\r\n"],"names":[],"version":3,"file":"index.34c78665.js.map","sourceRoot":"/__parcel_source_root/"}